// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gmt_bayes_par_negll
double gmt_bayes_par_negll(arma::vec pars, const arma::vec& max_titers, const arma::vec& min_titers, double prior_mean_mean, double prior_mean_sd, double prior_sd_shape, double prior_sd_scale);
RcppExport SEXP _meantiter_gmt_bayes_par_negll(SEXP parsSEXP, SEXP max_titersSEXP, SEXP min_titersSEXP, SEXP prior_mean_meanSEXP, SEXP prior_mean_sdSEXP, SEXP prior_sd_shapeSEXP, SEXP prior_sd_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type max_titers(max_titersSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type min_titers(min_titersSEXP);
    Rcpp::traits::input_parameter< double >::type prior_mean_mean(prior_mean_meanSEXP);
    Rcpp::traits::input_parameter< double >::type prior_mean_sd(prior_mean_sdSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sd_shape(prior_sd_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sd_scale(prior_sd_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(gmt_bayes_par_negll(pars, max_titers, min_titers, prior_mean_mean, prior_mean_sd, prior_sd_shape, prior_sd_scale));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_meantiter_gmt_bayes_par_negll", (DL_FUNC) &_meantiter_gmt_bayes_par_negll, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_meantiter(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
